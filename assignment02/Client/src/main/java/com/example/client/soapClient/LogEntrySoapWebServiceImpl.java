
package com.example.client.soapClient;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LogEntrySoapWebServiceImpl", targetNamespace = "http://logEntry.rest.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LogEntrySoapWebServiceImpl {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteAll", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.DeleteAll")
    @ResponseWrapper(localName = "deleteAllResponse", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.DeleteAllResponse")
    @Action(input = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/deleteAllRequest", output = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/deleteAllResponse")
    public String deleteAll();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchAll", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchAll")
    @ResponseWrapper(localName = "fetchAllResponse", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchAllResponse")
    @Action(input = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchAllRequest", output = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchAllResponse")
    public String fetchAll();

    /**
     * 
     * @param fromDate
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchFromDate", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchFromDate")
    @ResponseWrapper(localName = "fetchFromDateResponse", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchFromDateResponse")
    @Action(input = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchFromDateRequest", output = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchFromDateResponse")
    public String fetchFromDate(
        @WebParam(name = "fromDate", targetNamespace = "")
        String fromDate);

    /**
     * 
     * @param fromDate
     * @param toDate
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchFromDateToDate", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchFromDateToDate")
    @ResponseWrapper(localName = "fetchFromDateToDateResponse", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchFromDateToDateResponse")
    @Action(input = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchFromDateToDateRequest", output = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchFromDateToDateResponse")
    public String fetchFromDateToDate(
        @WebParam(name = "fromDate", targetNamespace = "")
        String fromDate,
        @WebParam(name = "toDate", targetNamespace = "")
        String toDate);

    /**
     * 
     * @param fromDate
     * @param logType
     * @param toDate
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchFromDateToDateWithLogType", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchFromDateToDateWithLogType")
    @ResponseWrapper(localName = "fetchFromDateToDateWithLogTypeResponse", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchFromDateToDateWithLogTypeResponse")
    @Action(input = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchFromDateToDateWithLogTypeRequest", output = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchFromDateToDateWithLogTypeResponse")
    public String fetchFromDateToDateWithLogType(
        @WebParam(name = "fromDate", targetNamespace = "")
        String fromDate,
        @WebParam(name = "toDate", targetNamespace = "")
        String toDate,
        @WebParam(name = "logType", targetNamespace = "")
        String logType);

    /**
     * 
     * @param logType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchAllWithLogType", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchAllWithLogType")
    @ResponseWrapper(localName = "fetchAllWithLogTypeResponse", targetNamespace = "http://logEntry.rest.example.com/", className = "com.example.client.soapClient.FetchAllWithLogTypeResponse")
    @Action(input = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchAllWithLogTypeRequest", output = "http://logEntry.rest.example.com/LogEntrySoapWebServiceImpl/fetchAllWithLogTypeResponse")
    public String fetchAllWithLogType(
        @WebParam(name = "logType", targetNamespace = "")
        String logType);

}
